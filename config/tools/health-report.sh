#!/usr/bin/env bash
set -euo pipefail
# Write human-readable TOML status under /srv/nixserver/state/status.toml
BASE="/srv/nixserver"; REL="$BASE/releases"; STATE="$BASE/state/status.toml"
active=""; previous=""
[[ -L "$BASE/current"  ]] && active="$(basename "$(readlink -f "$BASE/current")")"
[[ -L "$BASE/previous" ]] && previous="$(basename "$(readlink -f "$BASE/previous")")"
booted_gen=0
if [[ -L /run/current-system ]]; then link="$(readlink -f /run/current-system)"; [[ "$link" =~ system-([0-9]+)-link ]] && booted_gen="${BASH_REMATCH[1]}"; fi
mismatches=()
if [[ -d "$REL" ]]; then
  while IFS= read -r d; do
    [[ -z "$d" ]] && continue
    sys="$(cat "$REL/$d/.system-path" 2>/dev/null || true)"; [[ -n "$sys" ]] || continue
    root="/nix/var/nix/gcroots/nixstoreclumpgc/$d"; [[ -L "$root" ]] || mismatches+=("$d")
  done < <(ls -1 "$REL" 2>/dev/null || true)
fi
reboot=false; [[ -f /run/nixos/reboot-required ]] && reboot=true
{
echo "# generated by health-report.sh"
echo "active_release = \"$active\""
echo "previous_release = \"$previous\""
echo "booted_generation = $booted_gen"
echo "reboot_required = $reboot"
echo -n "mismatched_releases = ["; for i in "${!mismatches[@]}"; do [[ $i -gt 0 ]] && echo -n ", "; echo -n "\"${mismatches[$i]}\""; done; echo "]"
echo "next_gc_window = \"\""
} > "$STATE"
echo "wrote $STATE"
